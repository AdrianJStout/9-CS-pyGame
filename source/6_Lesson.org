#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Pygame
#+AUTHOR: Oliver Drayton

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/9-CS-pyGame">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Collision!
 :PROPERTIES:
 :HTML_CONTAINER_CLASS: activity
 :END:
- Open your .py file from lesson 5
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- We are going to make it into a simple game

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

- We will create another sprite using a basic shape called target. Then detect if player1 has collided with the target
 - First we need a variable to hold the x and y position of the target
[[./img/6-1.png]]
- Then add the target sprite
[[./img/6-2.png]]
- Printing hit is not very exciting so we will change the code so the target disappears and reappears at a random x y position when touched by the player sprite
 - In order to use the random module we must import it
[[./img/6-3.png]]
 - Then use the random.randint function to create a random numbers for the x and y postions of the target
[[./img/6-4.png]]

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:
- There are a number of improvement we can make
 - It would be better if the user had to collide with the target *and* click click the mouse
[[./img/6-5.png]]
- The game has a bug - if you hold down the mosue button the player just has to touch the target
 - This is slightly more complex to fix
-  We need to create a variable to prevent the player from firing again until until the fire button is released.
 1. Create the fireLock variable and set to 0 at the start of the game, so the player can fire
 [[./img/6-6.png]]
 2. Set fireLock to 1 when the mouse button is pressed
 [[./img/6-7.png]]
 3. Reset fireLock to one when the mouse button is released
[[./img/6-8.png]]

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:      
- *Silver:* Add comments to your code and in comments below your code explain what is a module in python and how to use one
- *Gold:*  The target is drawn over the player - fix this bug
- *Platinum:* Change the target to an image
