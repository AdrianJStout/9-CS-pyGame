#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='https://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Pygame
#+AUTHOR: Oliver Drayton

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/9-CS-pyGame.git">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Introdction
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Pygame is a cross-platform set of Python modules designed for creating 2D games. The modules are designed to be simple, easy to use, and fun—a key part of Pygame's ideology.
         http://www.pygame.org/

- Pygame was first released in 2000 and has a large community of developers. Have a look at the [[http://www.pygame.org/hifi.html][Awesome]] section of the web site.  

- Pygame requires several line of code to get things up and running, this has been provided for you in the form of a template to use of all your pygame projects.
[[./img/1-1.png]]

** Code It: Template
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- Create a folder called =pygameIntro=.
- Create a new project using pycharm called =pygameCode= in the =pygameIntro= folder.
- Download the template *pygame* to your =pygameIntro= folder as =basicShapes.py=
[[./doc/pygameDevTemplate.py][Click here for the template]] 


The template has two main sections:

- Game Setup – runs once when the game loads

- Game loop – runs again and again (loops) 60 times a second
  
** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:
Run the template it should create a new window that is black, 1000 * 800 pixels and closes when you click on the new windows X – that means it’s working!

** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:      
- Screen geometry
- Unlike Scratch, Pygame and most professional game engines have the origin x = 0, y = 0 at the top left hand corner. 

[[./img/1-2.png]]
** Program It
:PROPERTIES:


:HTML_CONTAINER_CLASS: program
:END:
- Pygame has several build in shapes:
[[./img/1-rect.png]]
[[./img/1-circle.png]]
[[./img/1-line.png]]
- Try a filled and an unfilled rectangle first
[[./img/1-3.PNG]]
- Now a filled and an unfilled circle
[[./img/1-4.PNG]]
- And a line
[[./img/1-5.PNG]]
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- *Silver:* Draw and filled and unfilled example of the 3 basic shapes of different colours and in different locations.
- http://www.rapidtables.com/web/color/RGB_Color.htm
- *Gold:* Add comments below your code explaining, in your own words, how RGB colours work.
- *Platinum:* Create some variables for some new colours and use them when creating shapes. Pygame also has the shapes arc, ellipse and polygon, draw an example of each.
